FROM golang:1.24.3-alpine AS build
ARG VERSION="dev"

# Set the working directory
WORKDIR /build

# Install git
RUN --mount=type=cache,target=/var/cache/apk \
    apk add git

# Build the server
# go build automatically download required module dependencies to /go/pkg/mod
RUN git clone https://github.com/github/github-mcp-server.git
WORKDIR /build/github-mcp-server
RUN go mod download

RUN CGO_ENABLED=0 go build -ldflags="-s -w -X main.version=${VERSION} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
    -o /bin/github-mcp-server cmd/github-mcp-server/main.go

# Make a stage to run the app
FROM node:23-alpine
# Set the working directory
WORKDIR /server
# Copy the binary from the build stage
COPY --from=build /bin/github-mcp-server .
# Set the entrypoint to the server 
RUN npm install -g supergateway

ENV PORT=${PORT:-8002}
ENV HOST=${HOST:-127.0.0.1}

# Using shell form to allow environment variable interpolation
CMD npx -y supergateway --stdio "/server/github-mcp-server stdio" --port "${PORT}" --baseUrl "http://${HOST}:${PORT}" --ssePath "/sse"


# ENTRYPOINT ["/server/github-mcp-server"]
# # Default arguments for ENTRYPOINT
# CMD ["stdio"]
